{"ast":null,"code":"var _jsxFileName = \"/Users/ammarmahmood/Documents/GitHub/react-notebook/collabnote/client/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Navbar from './components/navbar';\nimport Notebook from './components/notebook';\nimport Settings from './components/settings';\nimport Login from './components/login';\nimport './app.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notebooks, setNotebooks] = useState([]);\n  const [viewMode, setViewMode] = useState('scroll'); // 'scroll' or 'sideBySide'\n\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    newSocket.on('notebooks', data => {\n      setNotebooks(data);\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  const handleLogin = userData => {\n    setUser(userData);\n    socket.emit('login', userData);\n  };\n  const handleViewModeChange = mode => {\n    setViewMode(mode);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notebooks-list\",\n            children: [notebooks.map(notebook => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notebook-card\",\n              onClick: () => window.location.href = `/notebook/${notebook.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: notebook.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Last edited: \", new Date(notebook.lastEdited).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, notebook.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"create-notebook-btn\",\n              onClick: () => {\n                socket.emit('create-notebook', {\n                  userId: user.id\n                });\n              },\n              children: \"Create New Notebook\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notebook/:id\",\n          element: /*#__PURE__*/_jsxDEV(Notebook, {\n            socket: socket,\n            user: user,\n            viewMode: viewMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/settings\",\n          element: /*#__PURE__*/_jsxDEV(Settings, {\n            viewMode: viewMode,\n            onViewModeChange: handleViewModeChange,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3O4Sux6+4sE4j/6B4s+71SeaNOc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","io","Navbar","Notebook","Settings","Login","jsxDEV","_jsxDEV","App","_s","socket","setSocket","user","setUser","notebooks","setNotebooks","viewMode","setViewMode","newSocket","on","console","log","data","disconnect","handleLogin","userData","emit","handleViewModeChange","mode","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","map","notebook","onClick","window","location","href","id","title","Date","lastEdited","toLocaleString","userId","onViewModeChange","_c","$RefreshReg$"],"sources":["/Users/ammarmahmood/Documents/GitHub/react-notebook/collabnote/client/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport Navbar from './components/navbar';\nimport Notebook from './components/notebook';\nimport Settings from './components/settings';\nimport Login from './components/login';\nimport './app.css';\n\nconst App = () => {\n  const [socket, setSocket] = useState(null);\n  const [user, setUser] = useState(null);\n  const [notebooks, setNotebooks] = useState([]);\n  const [viewMode, setViewMode] = useState('scroll'); // 'scroll' or 'sideBySide'\n  \n  useEffect(() => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n    \n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n    });\n    \n    newSocket.on('notebooks', (data) => {\n      setNotebooks(data);\n    });\n    \n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  \n  const handleLogin = (userData) => {\n    setUser(userData);\n    socket.emit('login', userData);\n  };\n  \n  const handleViewModeChange = (mode) => {\n    setViewMode(mode);\n  };\n  \n  if (!user) {\n    return <Login onLogin={handleLogin} />;\n  }\n  \n  return (\n    <Router>\n      <div className=\"app\">\n        <Navbar user={user} />\n        <Routes>\n          <Route path=\"/\" element={\n            <div className=\"notebooks-list\">\n              {notebooks.map(notebook => (\n                <div \n                  key={notebook.id} \n                  className=\"notebook-card\"\n                  onClick={() => window.location.href = `/notebook/${notebook.id}`}\n                >\n                  <h3>{notebook.title}</h3>\n                  <p>Last edited: {new Date(notebook.lastEdited).toLocaleString()}</p>\n                </div>\n              ))}\n              <button \n                className=\"create-notebook-btn\"\n                onClick={() => {\n                  socket.emit('create-notebook', { userId: user.id });\n                }}\n              >\n                Create New Notebook\n              </button>\n            </div>\n          } />\n          <Route \n            path=\"/notebook/:id\" \n            element={\n              <Notebook \n                socket={socket} \n                user={user} \n                viewMode={viewMode}\n              />\n            } \n          />\n          <Route \n            path=\"/settings\" \n            element={\n              <Settings \n                viewMode={viewMode} \n                onViewModeChange={handleViewModeChange}\n                user={user}\n              />\n            } \n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}