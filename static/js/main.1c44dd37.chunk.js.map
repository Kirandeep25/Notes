{"version":3,"sources":["Components.js","App.js","index.js"],"names":["DYNAMIC_WIDTH","window","innerWidth","Title","glamorous","h1","color","NoteInput","textarea","resize","fontSize","fontFamily","minWidth","maxWidth","padding","minHeight","maxHeight","NoteContainer","div","marginTop","marginBottom","width","position","display","alignItems","paddingLeft","paddingRight","background","Note","p","wordWrap","Controls","right","flexDirection","ControlButton","button","border","outline","cursor","ButtonContainer","AddNoteButton","marginRight","paddingTop","height","borderRadius","ClearAllButton","APP_STORAGE_KEY","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","noteInputField","editNoteInputField","editNoteInput","value","addNewNote","concat","toConsumableArray","removeNote","index","filter","n","i","useEffect","existingNotes","JSON","parse","localStorage","getItem","setItem","stringify","react_default","a","createElement","onKeyDown","event","keyCode","preventDefault","onChange","target","placeholder","onClick","map","note","key","slice","editNote","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c44dd37.chunk.js","sourcesContent":["import glamorous from \"glamorous\";\n\n/**\n * Color values for your app:\n */\nconst DARK_COLOR = \"rgb(34,34,34)\";\nconst WARNING_COLOR = \"rgb(255, 86, 86)\";\nconst NOTE_BACKGROUND_COLOR = \"rgb(254,247,214)\";\nconst ADD_NOTE_BUTTON_TEXT_COLOR = \"rgb(15,228,255)\";\n\nconst DYNAMIC_WIDTH = window.innerWidth < 650 ? \"80vw\" : \"90vw\";\n\n/**\n * Styling for app components\n */\nexport const Title = glamorous.h1({\n  color: DARK_COLOR\n});\n\nexport const NoteInput = glamorous.textarea({\n  resize: \"none\",\n  fontSize: 22,\n  fontFamily: \"Montserrat\",\n  minWidth: DYNAMIC_WIDTH,\n  maxWidth: DYNAMIC_WIDTH,\n  padding: 8,\n  minHeight: 105,\n  maxHeight: 105\n});\n\nexport const NoteContainer = glamorous.div({\n  marginTop: 8,\n  marginBottom: 8,\n  width: DYNAMIC_WIDTH,\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  paddingLeft: 8,\n  paddingRight: 8,\n  minHeight: 95,\n  background: NOTE_BACKGROUND_COLOR\n});\n\nexport const Note = glamorous.p({\n  padding: 6,\n  width: \"78vw\",\n  wordWrap: \"break-word\"\n});\n\nexport const Controls = glamorous.div({\n  width: 45,\n  right: 0,\n  position: \"absolute\",\n  display: \"flex\",\n  flexDirection: \"column\"\n});\n\nexport const ControlButton = glamorous.button({\n  border: \"none\",\n  background: \"none\",\n  fontSize: 24,\n  outline: \"none\",\n  cursor: \"pointer\"\n});\n\nexport const ButtonContainer = glamorous.div({\n  minWidth: \"90vw\"\n});\n\nexport const AddNoteButton = glamorous.button({\n  marginTop: 15,\n  marginBottom: 15,\n  marginRight: 15,\n  paddingTop: 5,\n  height: 50,\n  width: 250,\n  fontSize: 24,\n  borderRadius: 3,\n  border: \"none\",\n  outline: \"none\",\n  fontFamily: \"Montserrat\",\n  background: DARK_COLOR,\n  color: ADD_NOTE_BUTTON_TEXT_COLOR,\n  cursor: \"pointer\"\n});\n\nexport const ClearAllButton = glamorous.button({\n  marginBottom: 15,\n  paddingTop: 5,\n  height: 50,\n  width: 250,\n  fontSize: 24,\n  borderRadius: 3,\n  border: \"none\",\n  outline: \"none\",\n  fontFamily: \"Montserrat\",\n  color: DARK_COLOR,\n  background: WARNING_COLOR,\n  cursor: \"pointer\"\n});\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport {\n  Title,\n  NoteInput,\n  NoteContainer,\n  Note,\n  Controls,\n  ControlButton,\n  AddNoteButton,\n  ClearAllButton,\n  ButtonContainer\n} from \"./Components\";\n\n/* Key to identify notes in local storage: */\nconst APP_STORAGE_KEY = \"APP_NOTES\";\n\n/**\n * Note-taking app code:\n */\nexport default function App() {\n  /* Define state: */\n  const [notes, setNotes] = useState([]);\n  const [noteInputField, editNoteInputField] = useState(\"\");\n\n  /* Define effects for saving for persisting notes: */\n  useEffect(() => {\n    const existingNotes = JSON.parse(localStorage.getItem(APP_STORAGE_KEY));\n    setNotes(existingNotes || []);\n  }, []);\n\n  useEffect(\n    () => {\n      localStorage.setItem(APP_STORAGE_KEY, JSON.stringify(notes));\n    },\n    [notes]\n  );\n\n  /* Define action handlers: */\n  function editNoteInput(value) {\n    editNoteInputField(value);\n  }\n\n  function handleKeypress(event) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      addNewNote();\n      editNoteInput(\"\");\n    }\n  }\n\n  function addNewNote() {\n    if (noteInputField) {\n      setNotes([noteInputField, ...notes]);\n      editNoteInput(\"\");\n    }\n  }\n\n  function editNote(index) {\n    const noteContent = notes[index];\n    editNoteInput(noteContent);\n    removeNote(index);\n  }\n\n  function removeNote(index) {\n    setNotes(\n      notes.filter((n, i) => {\n        return i !== index;\n      })\n    );\n  }\n\n  function clearAllNotes() {\n    setNotes([]);\n  }\n\n  /* Render app: */\n  return (\n    <div>\n      <Title>App Time!‚Ñ¢ Notebook ü§£</Title>\n      <NoteInput\n        value={noteInputField}\n        onKeyDown={handleKeypress}\n        onChange={event => editNoteInput(event.target.value)}\n        placeholder=\"Start typing... be creative! ü§π‚Äç‚ôÇÔ∏è\"\n      />\n      <ButtonContainer>\n        <AddNoteButton onClick={addNewNote}>‚ú® Add Note ‚ú®</AddNoteButton>\n        <ClearAllButton onClick={clearAllNotes}>Clear All! üí£</ClearAllButton>\n      </ButtonContainer>\n      {displayNotes()}\n    </div>\n  );\n\n  function displayNotes() {\n    return notes.map(function(note, index) {\n      return (\n        <NoteContainer key={note.slice(0, 15) + index}>\n          <Note>{note}</Note>\n          <Controls>\n            <ControlButton onClick={() => editNote(index)}>üìù</ControlButton>\n            <ControlButton onClick={() => removeNote(index)}>üôÖ‚Äç‚ôÇÔ∏è</ControlButton>\n          </Controls>\n        </NoteContainer>\n      );\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// Import CSS styles:\nimport \"./styles.css\";\n\n// Import the App:\nimport App from \"./App\";\n\n// Render the app to the page:\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}